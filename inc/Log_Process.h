/**
 * Log_Process.h
 */
#ifndef _LOG_PROCESS_
#define _LOG_PROCESS_
/*************************************************************************************************************
 * INCLUDE
*************************************************************************************************************/
#include <vector>

/*************************************************************************************************************
 * DEFINE
*************************************************************************************************************/
using namespace std;

/*************************************************************************************************************
 * VARIABLES
*************************************************************************************************************/

/*************************************************************************************************************
 * FUNCTIONS
*************************************************************************************************************/
class Log_Process
{
private:
    string fifoName;
    int logFile_fd;
    pthread_cond_t cond = PTHREAD_COND_INITIALIZER;
    void writeToLogFile(vector<char> buffer, ssize_t length);
public:
    static pthread_mutex_t fifo_lock;
    Log_Process(string fifo);
    void run();
    void write_log(string log);
};

#endif // _LOG_PROCESS_
